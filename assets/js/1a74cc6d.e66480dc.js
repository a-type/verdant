"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2688],{4741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"sync/server","title":"Sync Server","description":"Verdant doesn\'t sync by default. It\'s offline-first, sync-optional. I built it that way because my goal is to support nice local-only anonymous experiences, and add sync & realtime on as an incentive to sign up (and potentially subscribe) to your app.","source":"@site/docs/sync/server.md","sourceDirName":"sync","slug":"/sync/server","permalink":"/docs/sync/server","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Sync","permalink":"/docs/category/sync"},"next":{"title":"Authenticating Sync","permalink":"/docs/sync/authentication"}}');var s=n(7557),i=n(6039);const o={sidebar_position:1},a="Sync Server",c={},l=[{value:"Quickstart",id:"quickstart",level:2},{value:"A real server",id:"a-real-server",level:2},{value:"Profiles",id:"profiles",level:2},{value:"Evicting libraries from server storage",id:"evicting-libraries-from-server-storage",level:2},{value:"Using eviction for contingency scenarios",id:"using-eviction-for-contingency-scenarios",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"sync-server",children:"Sync Server"})}),"\n",(0,s.jsx)(t.p,{children:"Verdant doesn't sync by default. It's offline-first, sync-optional. I built it that way because my goal is to support nice local-only anonymous experiences, and add sync & realtime on as an incentive to sign up (and potentially subscribe) to your app."}),"\n",(0,s.jsx)(t.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,s.jsx)(t.p,{children:"Verdant provides a simple CLI server which can be used to try out sync and prototype. It's not recommended to deploy this server or use it in a production capacity, as it completely ignores authentication and authorization."}),"\n",(0,s.jsx)(t.p,{children:"To use this server, run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"verdant-server --port 3242\n"})}),"\n",(0,s.jsxs)(t.p,{children:["No options are required. ",(0,s.jsx)(t.code,{children:"--port"})," sets a port, ",(0,s.jsx)(t.code,{children:"--secret"})," sets a token signing secret (the default one is not at all secure)."]}),"\n",(0,s.jsxs)(t.p,{children:["This server will store data in a SQLite database file called ",(0,s.jsx)(t.code,{children:"verdant.sqlite"})," in the current directory."]}),"\n",(0,s.jsx)(t.p,{children:"To connect to your prototyping sync server, pass the following options to your Verdant client descriptor constructor (the server CLI also outputs instructions for this):"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const clientDesc = new ClientDescriptor({\n\tnamespace: 'whatever',\n\tsync: cliSync('<a library id>'),\n});\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"libraryId"})," can be anything. Users connected to the same library sync together. You might put it in the URL path or something."]}),"\n",(0,s.jsx)(t.h2,{id:"a-real-server",children:"A real server"}),"\n",(0,s.jsx)(t.p,{children:"To start syncing in production scenarios, you must first host a server - just a few lines of code."}),"\n",(0,s.jsx)(t.p,{children:"The server can be run standalone, or plugged into an existing HTTP server. It requires a few things to be constructed:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A path to a SQLite database to store data"}),"\n",(0,s.jsx)(t.li,{children:"An authorization function which it uses to determine connected client identity and library access"}),"\n",(0,s.jsx)(t.li,{children:"Optional: an interface implementation to provide more detailed user profile information for presence features"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Create a server like this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { Server } from '@verdant-web/server';\nimport { sqlStorage } from '@verdant-web/server/storage';\n\nconst server = new Server({\n\tstorage: sqlStorage({ databaseFile: 'verdant.sqlite' }),\n\ttokenSecret: process.env.LOFI_SECRET,\n\t// below fields are optional\n\tprofiles: {\n\t\tget: async (userId: string) => {\n\t\t\t// you could fetch a profile record from a database here to augment\n\t\t\t// this profile with name, image, etc.\n\t\t\t// values will be cached, so don't worry too much about timing.\n\t\t\treturn { id: userId };\n\t\t},\n\t},\n\t// supposing you're using Express or another server already,\n\t// you can attach Verdant to it instead of running it separately.\n\thttpServer: myExistingServer,\n});\n\n// if you did not provide your own http server, call listen to begin\n// serving requests\nserver.listen(8080, () => {\n\tconsole.log('Ready!');\n});\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to attach to an existing HTTP server, you will also need to set up an HTTP endpoint to handle HTTP requests on the ",(0,s.jsx)(t.code,{children:"/sync"})," subpath. For example, using Express:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"app.use('/sync', server.handleRequest);\n"})}),"\n",(0,s.jsx)(t.p,{children:"Custom HTTP server support is a little limited right now. It should support Connect/Express-like middleware."}),"\n",(0,s.jsx)(t.h2,{id:"profiles",children:"Profiles"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"profiles"})," configuration option accepts anything that implements the profiles interface - which is just a ",(0,s.jsx)(t.code,{children:"get(userId)"})," function. It can return any data your app permanently associates with a particular user. This data is utilized in the ",(0,s.jsx)(t.a,{href:"./presence",children:"presence"})," system to give clients access to read-only, trusted information about particular users. A default name is recommended if you have one for your user. A profile image is also a good idea!"]}),"\n",(0,s.jsx)(t.h2,{id:"evicting-libraries-from-server-storage",children:"Evicting libraries from server storage"}),"\n",(0,s.jsxs)(t.p,{children:["In keeping with the Verdant principle of ",(0,s.jsx)(t.a,{href:"../manifesto",children:"matching infrastructure cost with user revenue"}),', the server lets you selectively "evict" libraries from storage.']}),"\n",(0,s.jsx)(t.p,{children:"You can evict libraries when a user ends their subscription. This will free up space in your database without disrupting the user's local copy of their data."}),"\n",(0,s.jsx)(t.p,{children:"If the user decides to subscribe again, you don't need to do anything - whenever they sync again, the server will be sure to restore the library from their replica."}),"\n",(0,s.jsxs)(t.p,{children:["To evict a library, just call ",(0,s.jsx)(t.code,{children:"server.evictLibrary('library-id')"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"using-eviction-for-contingency-scenarios",children:"Using eviction for contingency scenarios"}),"\n",(0,s.jsx)(t.p,{children:"Although I've done a lot of testing to try to make Verdant as consistent and reliable as possible under a variety of circumstances, I can never guarantee it's bug-free."}),"\n",(0,s.jsx)(t.p,{children:"You may reach a situation where a user reaches out about problems with sync. Maybe devices are not consistent, or changes are being reverted."}),"\n",(0,s.jsxs)(t.p,{children:["The first thing to check would be that the user has the latest version of your client code. But after that, you could expose an admin-only endpoint on your server which calls ",(0,s.jsx)(t.code,{children:"server.evictLibrary"}),". This may seem dangerous, but it's pretty safe! The user will need to reconnect with a device which has a good copy of their data to restore their library to the server. If they're already connected to sync when you do this, their device will reconnect and reupload automatically."]}),"\n",(0,s.jsx)(t.p,{children:"Other replicas which may have interacted with the library will be forced to reset back to this known state, so they'll lose any offline or out-of-sync changes -- but that's kind of the point; starting back at a clean slate."}),"\n",(0,s.jsx)(t.p,{children:"If this ever does happen to you, reach out with any details you can give me about what happened. Although I do feel better having these failsafes, I'd rather have Verdant be 100% reliable and bug-free."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},6039:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(8225);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);