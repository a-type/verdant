"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3547],{369:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,y=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(8084),a=(t(7378),t(369));const i={sidebar_position:10},o="Usage examples",s={unversionedId:"react/examples",id:"react/examples",title:"Usage examples",description:"Basic",source:"@site/docs/react/examples.md",sourceDirName:"react",slug:"/react/examples",permalink:"/docs/react/examples",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"'Field' ergonomics",permalink:"/docs/react/field"},next:{title:"React Router",permalink:"/docs/react/router"}},c={},l=[{value:"Basic",id:"basic",level:2},{value:"Advanced: changing client libraries",id:"advanced-changing-client-libraries",level:2}],u={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"usage-examples"},"Usage examples"),(0,a.yg)("h2",{id:"basic"},"Basic"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"function Todos() {\n    const items = hooks.useAllTodoItems({\n        index: {\n            where: 'indexableDone',\n            equals: 'false',\n        },\n    });\n\n    const client = hooks.useClient();\n\n    return (\n        <div>\n            <ul>\n                {items.map((item) => (\n                    <li key={item.get('id')}>{item.get('content')}</li>\n                ))}\n            </ul>\n            <button\n                onClick={() => {\n                    client.todoItems.put({ content: '' });\n                }}\n            >\n                Add\n            </button>\n        </div>\n    );\n}\n\nfunction App() {\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <hooks.Provider value={clientDescriptor}>\n                <Todos />\n            </hooks.Provider>\n        </Suspense>\n    );\n}\n")),(0,a.yg)("h2",{id:"advanced-changing-client-libraries"},"Advanced: changing client libraries"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"function Todos() {\n    const items = hooks.useAllTodoItems({\n        index: {\n            where: 'indexableDone',\n            equals: 'false',\n        },\n    });\n\n    return (\n        <ul>\n            {items.map((item) => (\n                <li key={item.get('id')}>{item.get('content')}</li>\n            ))}\n        </ul>\n    );\n}\n\nfunction App({ libraryId }: { libraryId: string }) {\n    /**\n     * When the libraryId prop changes, we create a new client\n     * which authenticates against that library. The auth endpoint\n     * here would need to read that query parameter and create\n     * a token for the client to access the library.\n     */\n    const descriptor = useMemo(\n        () =>\n            new ClientDescriptor({\n                namespace: libraryId,\n                migrations,\n                sync: {\n                    authEndpoint: `http://localhost:3001/auth/sync?library=${libraryId}`,\n                    initialPresence: {},\n                    // start sync when ready - useful if you want to sync\n                    // in this setup. if you don't want to sync, that's fine too!\n                    autoStart: true,\n                },\n            }),\n        [libraryId],\n    );\n\n    useEffect(() => {\n        // when the client changes, shut it down.\n        return () => {\n            descriptor.close();\n        };\n    }, [descriptor]);\n\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <hooks.Provider value={clientDescriptor}>\n                <Todos />\n            </hooks.Provider>\n        </Suspense>\n    );\n}\n")))}d.isMDXComponent=!0}}]);